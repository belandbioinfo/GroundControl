package euler_2;

import java.util.LinkedList;
import java.util.List;

/* https://projecteuler.net/problem=2
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not 
 * exceed four million, find the sum of the even-valued terms.
 * 
 */
public class Fibonacci {
	private static LinkedList<Integer> fibSeq = new LinkedList<Integer>();
	private static int upperBound;
	
	public Fibonacci(int uBound){
		upperBound = uBound;
		fibSeq.push(1);
		fibSeq.push(2);
		this.calculateFib();
	}
	
	public LinkedList<Integer> getFibSequence(){
		return fibSeq;
	}
	
	private void calculateFib() {
		
		int term1 = 1;
		int term2 = 2;
		int newTerm = term1+term2;
		while (newTerm <= upperBound){
			fibSeq.push(newTerm);
			newTerm = term1+term2;
			term1 = term2;
			term2 = newTerm;
		}
	}

}
